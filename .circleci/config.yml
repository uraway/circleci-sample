version: 2.1

orbs:
  cli: circleci/circleci-cli@0.1.5

jobs:
    test:
      executor: cli/default
      steps:
        - checkout

        - cli/install
        - run:
            name: セットアップ
            command: |
              echo 'export BRANCH=INTEGRATION_TEST/${CIRCLE_SHA1}' >> $BASH_ENV
              echo 'export TEST_REPOSITORY=hello-world-integration-test' >> $BASH_ENV
              echo 'export ORB_REF=uraway/hello-world@dev:${CIRCLE_SHA1}' >> $BASH_ENV

              git config --global user.email "circleci@example.com"
              git config --global user.name "CircleCI"

        - add_ssh_keys:
              fingerprints:
                  - 00:53:70:ec:a7:60:5c:c1:c5:9d:a2:36:eb:00:99:70

        - run:
            name: 開発用Orbをパブリッシュ
            command: circleci orb publish packed.yml ${ORB_REF} --token ${CIRCLE_TOKEN}

        - run:
            name: 直前にパブリッシュした開発用Orbを使って、別リポジトリのビルドを開始する
            command: |
              git clone git@github.com:uraway/${TEST_REPOSITORY}.git
              cd hello-world-integration-test
              git checkout -b ${BRANCH}
              mkdir -p .circleci
              cat \<<EOF > .circleci/config.yml
                version: 2.1
                orbs:
                  hello-world: ${ORB_REF}
                workflows:
                  hello-workflow:
                    jobs:
                      - hello-world/echo_job:
                          to: CircleCI
              EOF
              git add .
              git commit -m "Updates from ${CIRCLE_BUILD_URL}"
              git push -f --set-upstream origin ${BRANCH}

        - run:
            name: ビルドが完了するまで問い合わせる
            command: |
              while true; do
                curl https://circleci.com/api/v1.1/project/github/uraway/${TEST_REPOSITORY}/tree/${BRANCH}?limit=1&filter=completed > build-result.json

                IS_COMPLETED=$(cat build-result.json | jq -r '.[0]')
                if [ -n "$IS_COMPLETED" ]; then
                  break
                fi

                sleep 15
              done

              STATUS=$(cat build-result.json | jq -r '.[0].status')

              if [ "$STATUS" == "success" ];then
                echo "Success"
                exit 0
              else
                echo "Failed"
                exit 1
              fi

workflows:
  version: 2
  main:
    jobs:
      - test
