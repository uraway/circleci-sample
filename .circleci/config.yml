version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:9.6.9-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: sample_app_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - setup_remote_docker

      - restore_cache:
          keys:
            - rails-bundle-v1-{{ checksum "Gemfile.lock" }}
            - rails-bundle-v1-

      - run: bundle install

      - run: |
          CACHE_CONTAINER=bundle-cache
          CACHE_PATH=vendor/bundle
          docker container create --name $CACHE_CONTAINER -v $CACHE_PATH alpine:3.4
          docker cp $CACHE_PATH $CACHE_CONTAINER:/$CACHE_PATH
          docker run --volumes-from $CACHE_PATH myapp:$CIRCLE_BRANCH bundle check || bundle install

      - save_cache:
          key: rails-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle


workflows:
    version: 2
    main:
      jobs:
        - build
