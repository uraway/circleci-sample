parameters:
  image-tag:
    default: 'latest'
    type: string
  run-main-workflow:
    default: false
    type: boolean

executors:
  node:
    docker:
      - image: circleci/node:<< pipeline.parameters.image-tag >>

version: 2.1
jobs:
  install_deps:
    executor: node
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

      - run:
          name: 依存関係のインストール
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - persist_to_workspace:
          root: ~/project
          paths:
            - build/*
            - node_modules/*

  lint_and_test:
    executor: node
    steps:
      - checkout

      - attach_workspace:
          at: ~/project

      - run:
          name: 静的解析、テスト結果ファイルを出力するディレクトリを作成
          command: mkdir reports

      - run:
          name: コードの静的解析を実行
          command: $(npm bin)/eslint ./src --ext .ts --format junit --output-file ./reports/eslint/eslint.xml

      - run:
          name: テストを実行
          command: $(npm bin)/nyc --silent $(npm bin)/mocha ./test/*.test.ts --require ts-node/register --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: ./reports/mocha/test-results.xml

      - run:
          name: コードカバレッジを生成
          command: $(npm bin)/nyc report --reporter=lcov

      - store_test_results:
          path: ./reports

      - store_artifacts:
          path: ./reports

      - store_artifacts:
          path: ./coverage
          prefix: coverage

  build:
    executor: node
    steps:
      - checkout

      - attach_workspace:
          at: ~/project

      - run:
          name: TypeScriptコードをビルド
          command: $(npm bin)/tsc

  trigger-jobs:
    machine:
      image: ubuntu-1604:201903-01
    parameters:
      image-tag:
        default: 'latest'
        type: string
    steps:
      - run:
          command: |
            VCS_TYPE=$(echo ${CIRCLE_BUILD_URL} | cut -d '/' -f 4)

            curl -u ${CIRCLE_TOKEN}: -X POST --header "Content-Type: application/json" -d "{
              \"branch\": \"${CIRCLE_BRANCH}\",
              \"parameters\": {\"run-main-workflow\": true, \"image-tag\":\"<< parameters.image-tag >>\"}
            }" "https://circleci.com/api/v2/project/${VCS_TYPE}/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pipeline"
          name: Trigger main worflow

workflows:
  version: 2
  trigger-jobs:
    unless: << pipeline.parameters.run-main-workflow >>
    jobs:
      - trigger-jobs:
          name: LTSリリース
          image-tag: '12'
      - trigger-jobs:
          name: 最新リリース
          image-tag: 'latest'
  main:
    when: << pipeline.parameters.run-main-workflow >>
    jobs:
      - install_deps
      - lint_and_test:
          requires:
            - install_deps
      - build:
          requires:
            - lint_and_test
