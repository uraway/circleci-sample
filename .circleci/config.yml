version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-image-{{ .Branch }}
          - v1-image-
      - run:
          name: イメージの.tarキャッシュがあればロード
          command: |
            set +o pipefail
            docker load -i ~/caches/${CIRCLE_PROJECT_REPONAME}.tar | true
      - run:
          name: イメージのビルド
          command: |
            docker build --cache-from=${CIRCLE_PROJECT_REPONAME}:latest -t ${CIRCLE_PROJECT_REPONAME} .
      - run:
          name: イメージのレイヤを.tarにまとめて保存
          command: |
            mkdir -p ~/caches
            docker save -o ~/caches/${CIRCLE_PROJECT_REPONAME}.tar ${CIRCLE_PROJECT_REPONAME}
      - save_cache:
          key: v1-image-{{ .Branch }}-{{ epoch }}
          paths:
            - ~/caches
      - persist_to_workspace:
          root: ~/
          paths:
            - caches

  ping1:
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/

      - run:
          name: イメージの.tarキャッシュがあればロード
          command: |
            set +o pipefail
            docker load -i ~/caches/${CIRCLE_PROJECT_REPONAME}.tar | true

      - run: docker images

      - run: |
          docker run -d --name circleci-sample -p 3000:3000 circleci-sample
          # 次のコマンドは失敗する
          curl --retry 10 --retry-connrefused http://localhost:3000

  ping2:
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/

      - run:
          name: イメージの.tarキャッシュがあればロード
          command: |
            set +o pipefail
            docker load -i ~/caches/${CIRCLE_PROJECT_REPONAME}.tar | true

      - run: docker images

      - run: |
          docker run -d --name circleci-sample -p 3000:3000 circleci-sample
          # 次のコマンドは成功する
          docker exec circleci-sample curl --retry 10 --retry-connrefused http://localhost:3000

workflows:
  version: 2
  main:
    jobs:
    - build
    - ping1:
        requires:
          - build
    - ping2:
        requires:
          - build
