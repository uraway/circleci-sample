version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.13.3
      - image: circleci/mysql:5.7
    environment: # environment variables for primary container
      MYSQL_DATABASE: ci_db
      MYSQL_HOST: localhost
      MYSQL_PASS: ""
      MYSQL_USER: root
    # directory where steps are run. Path must conform to the Go Workspace requirements
    working_directory: /go/src/github.com/uraway/circleci-sample

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-pkg-cache

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go get github.com/jstemmer/go-junit-report

      - run: mkdir -p /tmp/test-results/go-test

      - run:
          command: go run main.go
          background: true

      - run:
          name: Validate service is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 -X GET http://localhost:8080/

      - run: go test -v 2>&1 | go-junit-report > /tmp/test-results/go-test/result.xml

      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
