version: 2.1
jobs:
  build_and_test:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:9.6.9-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: sample_app_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - restore_cache:
          keys:
            - rails-bundle-v1-{{ checksum "Gemfile.lock" }}
            - rails-bundle-v1-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: rails-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - rails-yarn-v2-{{ checksum "yarn.lock" }}
            - rails-yarn-v2-

      - run:
          name: Yarn Install
          command: yarn install

      - save_cache:
          key: rails-yarn-v2-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      #- run:
      #    name: Wait for DB
      #    command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Waiting for postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for postgres && exit 1

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results

workflows:
    version: 2
    main:
      jobs:
        - build_and_test
